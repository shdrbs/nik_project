<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nik.project.mapper.OrderMapper">

	<!-- 주문 상품 정보 -->
	<select id="getProductInfo" resultType="com.nik.project.model.OrderPageItemDTO">
		select id, name, price, discount from product where id = #{id}
	</select>

	<!-- 주문 상품 정보(주문 처리) -->
	<select id="getOrderInfo" resultType="com.nik.project.model.OrderItemDTO">
		select id, price, discount, name
		from product where id = #{id}
	</select>

	<!-- 주문 테이블 등록 -->
	<insert id="registOrder">
		insert into product_order(orderId, addressee, memberId, memberAddr1, memberAddr2, memberAddr3, orderState, deliveryCost, usePoint)
    	values(#{orderId}, #{addressee}, #{memberId}, #{memberAddr1}, #{memberAddr2}, #{memberAddr3}, '배송준비', #{deliveryCost}, #{usePoint})
	</insert>

	<!-- 주문 아이템 테이블 등록 -->
	<insert id="registOrderItem">
		insert into product_orderItem(orderItemId, orderId, id, count, price, discount, savePoint, name)
		values(orderitem_seq.nextval, #{orderId}, #{id}, #{count}, #{price}, #{discount}, #{savePoint}, #{name})
	</insert>

	<!-- 주문 금액 차감 -->
	<update id="deductMoney">
		update member set money = #{money}, point = #{point} where memberid = #{memberId}
	</update>

	<!-- 주문 재고 차감 -->
	<update id="deductStock">
		update product set stock = #{stock} where id = #{id}
	</update>

	<!-- 주문취소 -->
	<update id="orderCancel">
		update product_order set orderState = '주문취소' where orderId = #{orderId}
	</update>

	<!-- 주문 상품 정보(주문취소) -->
	<select id="getOrderItemInfo" resultType="com.nik.project.model.OrderItemDTO">
		select * from product_orderItem where orderId = #{orderId}
	</select>

	<!-- 주문 정보(주문 취소) -->
	<select id="getOrder" resultType="com.nik.project.model.OrderDTO">
		select * from product_order where orderId = #{orderId}
	</select>

</mapper>